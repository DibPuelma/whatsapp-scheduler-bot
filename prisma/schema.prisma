// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ScheduledMessage {
  id          Int      @id @default(autoincrement())
  phone       String   // recipient's phone number
  senderPhone String   // phone number of the user scheduling the message
  content     String
  scheduledAt DateTime
  status      String   // pending, sent, failed
  sentAt      DateTime?
  error       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([senderPhone, status], name: "scheduled_messages_sender_status_idx")
  @@index([scheduledAt], name: "scheduled_messages_scheduled_at_idx")
  @@map("scheduled_messages")
}

model PendingConversation {
  id             String   @id @default(cuid())
  phone          String   // recipient's phone number
  senderPhone    String   // phone number of the user scheduling the message
  originalInput  String
  partialContent String
  missing        String   // Will store either "date" or "time"
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@map("pending_conversations")
}

model MessageViewStats {
  id             Int      @id @default(autoincrement())
  senderPhone    String   @unique // phone number of the user viewing messages
  totalViews     Int      @default(0)  // total number of view requests
  lastViewedAt   DateTime @default(now())
  lastOffset     Int      @default(0)  // last pagination offset
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@index([senderPhone], name: "message_view_stats_sender_idx")
  @@map("message_view_stats")
}
