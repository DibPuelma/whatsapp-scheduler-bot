// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ScheduledMessage {
  jobId                    String   @id @default(cuid()) // unique identifier for the scheduled job
  userId                   String   // WhatsApp ID of the user who scheduled the message
  recipientIdentifier      String   // resolved phone number
  originalRecipientString  String   // the exact recipient string user provided
  messageContent           String   // full text of the message
  scheduledTimestampUTC    DateTime // resolved date and time in UTC
  originalUserDateTimeString String  // the exact date/time string user provided
  userTimeZoneOffset       Int?     // optional, for future reference or potential display adjustments
  status                   String   // PENDING, SENT, FAILED_TO_SEND, CANCELLED
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt

  @@index([userId, status], name: "scheduled_messages_user_status_idx")
  @@index([scheduledTimestampUTC], name: "scheduled_messages_timestamp_idx")
  @@map("scheduled_messages")
}

model PendingConversation {
  id             String   @id @default(cuid())
  phone          String   // recipient's phone number
  senderPhone    String   // phone number of the user scheduling the message
  originalInput  String
  partialContent String
  missing        String   // Will store either "date" or "time"
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@map("pending_conversations")
}

model MessageViewStats {
  id             Int      @id @default(autoincrement())
  senderPhone    String   @unique // phone number of the user viewing messages
  totalViews     Int      @default(0)  // total number of view requests
  lastViewedAt   DateTime @default(now())
  lastOffset     Int      @default(0)  // last pagination offset
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@index([senderPhone], name: "message_view_stats_sender_idx")
  @@map("message_view_stats")
}

model WhatsAppLink {
  id          Int      @id @default(autoincrement())
  phoneNumber String   @unique // The user's WhatsApp phone number
  status     String   // active, inactive, disconnected
  lastActive DateTime @default(now())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([phoneNumber], name: "whatsapp_link_phone_idx")
  @@index([status], name: "whatsapp_link_status_idx")
  @@map("whatsapp_links")
}
